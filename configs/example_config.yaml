project_name: single_shell # project name for logging using wandb (wandb.ai), uncomment in main.py

model_name: fod # see models.py
output_calculator: singleshell # see output_calculators.py
loss_function_name: singleshell_csd_loss # see loss_functions.py
gaussian_encoding: True # use fourier features encoding
fod_rescale: True # multiply with rescaling factor after convolution of FOD and response
dataset_name: singleshell # see datasets.py
bval_delta: 100 # values between the shell defined below +- bval_delta are included for the shell
shells: [3000] # which bval shell to use
scale_data: True # scale the dwi to 0-1 range before fitting
scheduler: True # use a learning rate schedular

width: 144
height: 173
depth: 144

log_freq: 0 # number of iterations between logging, 0 for no logging

paths: # from repository root
  mask: data/ISMRM2015/synth/hires_files/tissue_mask_hires.nii.gz
  fsl_bvecs: data/ISMRM2015/synth/inr.bvecs #fsl style bvecs/bvals also accepted: mrtrix format. Use mrtrix_bvecs:
  fsl_bvals: data/ISMRM2015/synth/used.bvals
  response: data/ISMRM2015/synth/hires_files/b3000_resp.txt
  nifti: data/ISMRM2015/synth/hires_files/sim_multi_hires.nii.gz
  recon_nifti: data/ISMRM2015/synth/hires_files/sim_multi_hires.nii.gz # dwi image with desired output shape
  recon_mask: data/ISMRM2015/synth/hires_files/tissue_mask_hires.nii.gz # mask with desired output shape
  output: runs/test

train_cfg:
  lmax: 8
  lpos: 5000 # number of positional encodings
  n_layers: 4
  hidden_dim: 1024
  lr: 0.0001
  epochs: 30
  batch_size: 500
  lambda: 0 # deprecated, but necessary to put to a value
  slice_id: 45 # slice used for logging intermediate images
  sigma: 4 # sigma for gaussian used in fourier features encoding
